{"version":3,"sources":["../../src/browser.js"],"names":[],"mappings":";;;;;kBAWwB,W;;AAXxB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;AAEA,IAAM,SAAS,gCAAW,eAAX,CAAf;;AAEA,IAAI,YAAJ;;;;;EAEe,SAAS,WAAT,OAAiE;AAAA,QAA1C,gBAA0C,QAA1C,gBAA0C;AAAA,QAAxB,WAAwB,QAAxB,WAAwB;AAAA,QAAX,OAAW,QAAX,OAAW;;AAC5E,WAAO,UAAC,GAAD,EAAS;AACZ,YAAI,OAAJ,CAAY,MAAZ,G;;;;+BAAqB,UAAU,gBAAV,EAA4B,IAA5B,EAAkC;AAAA;;AACnD,mBAAO,KAAP,CAAa,aAAb,EAA4B,EAAE,UAAF,EAA5B;;AAEA,gBAAI,CAAC,iBAAiB,IAAtB,EAA4B;AACxB,sBAAM,IAAI,KAAJ,CAAU,mCAAV,CAAN;AACH;;AAED,gBAAI,iBAAiB,OAAjB,IAA4B,iBAAiB,MAAjD,EAAyD;AAAA,iB;;oBAAA;AACrD,wBAAM,MAAM,mBAAZ;AACA,wBAAI,iBAAiB,OAArB,EAA8B;AAC1B,+BAAO,IAAP,CAAY,iBAAiB,OAA7B,EACK,OADL,CACa;AAAA,mCAAO,IAAI,UAAJ,CAAe,GAAf,EAAoB,iBAAiB,OAAjB,CAAyB,GAAzB,CAApB,CAAP;AAAA,yBADb;AAEH;;AAED,wBAAI,iBAAiB,MAArB,EAA6B;AACzB,+BAAO,IAAP,CAAY,iBAAiB,MAA7B,EACK,OADL,CACa;AAAA,mCAAO,IAAI,QAAJ,CAAa,GAAb,EAAkB,iBAAiB,MAAjB,CAAwB,GAAxB,CAAlB,CAAP;AAAA,yBADb;AAEH;;AAED,0BAAK,GAAL,GAAW,GAAX;;AAEA,wBAAI,WAAJ,EAAiB;AACb,4BAAI,SAAJ,CAAc,WAAd;AACH;AAhBoD;AAiBxD;;AAED,gCAAO;AACH,yBAAS,IADN;AAEH,sBAAM,iBAAiB,IAFpB;AAGH,sBAAM,KAAK,GAAL,GAAW,SAAX,GAAuB,IAH1B;AAIH,gCAJG;AAKH,qBAAK,KAAK,GAAL;AALF,aAAP;AAOH,SAjCD;;AAmCA,YAAI,gBAAJ,EAAsB;AAAA,a;;gBAAA;AAClB,oBAAM,UAAU,OAAO,MAAP,CAAc,IAAI,OAAlB,CAAhB;AACA,+CAAgB,IAAhB,CAAqB,YAAM;AACvB,2BAAO,KAAP,CAAa,gBAAb;AACA,4BAAQ,MAAR,CAAe,gBAAf,EAAiC,WAAjC;AACH,iBAHD;AAFkB;AAMrB;AACJ,KA3CD;AA4CH","file":"browser.js","sourcesContent":["import DefaultApp from 'fody-app';\nimport AltApp from 'fody-alt-app';\nimport contentLoaded from 'content-loaded';\nimport render from 'fody';\nimport Logger from 'nightingale-logger';\nimport Alt from 'alt';\n\nconst logger = new Logger('alp.react-alt');\n\nlet alt;\n\nexport default function alpReactAlt({ moduleDescriptor, initialData, element }) {\n    return (app) => {\n        app.context.render = function (moduleDescriptor, data) {\n            logger.debug('render view', { data });\n\n            if (!moduleDescriptor.View) {\n                throw new Error('View is undefined, class expected');\n            }\n\n            if (moduleDescriptor.actions || moduleDescriptor.stores) {\n                const alt = new Alt();\n                if (moduleDescriptor.actions) {\n                    Object.keys(moduleDescriptor.actions)\n                        .forEach(key => alt.addActions(key, moduleDescriptor.actions[key]));\n                }\n\n                if (moduleDescriptor.stores) {\n                    Object.keys(moduleDescriptor.stores)\n                        .forEach(key => alt.addStore(key, moduleDescriptor.stores[key]));\n                }\n\n                this.alt = alt;\n\n                if (initialData) {\n                    alt.bootstrap(initialData);\n                }\n            }\n\n            render({\n                context: this,\n                View: moduleDescriptor.View,\n                data: this.alt ? undefined : data,\n                element,\n                App: this.alt ? AltApp : DefaultApp,\n            });\n        };\n\n        if (moduleDescriptor) {\n            const context = Object.create(app.context);\n            contentLoaded().then(() => {\n                logger.debug('document ready');\n                context.render(moduleDescriptor, initialData);\n            });\n        }\n    };\n}\n"]}